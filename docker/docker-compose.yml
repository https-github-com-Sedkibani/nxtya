version: '3'
services:
  web: 
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:9000"
    depends_on:
      - mysql
      - redis
    volumes:
      - ./home/sedki/Documents/nxtya:/home/sedki/Documents/nxtya
    environment:
      - APP_NAME=Laravel
      - APP_ENV=local
      - APP_KEY=
      - APP_DEBUG=true
      - APP_URL=http://localhost
     # - LOG_CHANNEL=stack
      #- LOG_LEVEL=debug
      #- DB_CONNECTION=mysql
      #- DB_HOST=mysql
      #- DB_PORT=3306
      #- DB_DATABASE=laravel
      #- DB_USERNAME=root
      #- DB_PASSWORD=
      #- BROADCAST_DRIVER=log
      #- CACHE_DRIVER=file
      #- QUEUE_CONNECTION=sync
      #- SESSION_DRIVER=file
      #- SESSION_LIFETIME=120
      - REDIS_HOST=redis
      - REDIS_PASSWORD=null
      - REDIS_PORT=6379
      - MAIL_MAILER=smtp
      - MAIL_HOST=mailhog
      - MAIL_PORT=1025
      - MAIL_USERNAME=null
      - MAIL_PASSWORD=null
      - MAIL_ENCRYPTION=null
      #- MAIL_FROM_ADDRESS=null
      #- MAIL_FROM_NAME="${APP_NAME}"
      #- MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
      #- MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"
      #- MIX_API_URL=http://localhost:8000/api
      #- MIX_APP_URL=http://localhost:8000
      #- MIX_API_STORAGE=http://localhost:8000/storage/
      #- MIX_QUESTIONS_URL=http://localhost:8000/images/questions/cd

  mysql:
    image: mysql:5.7
    volumes:
      - mysql:/var/lib/mysql
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']

  redis:
    image: redis:6.2.1
    volumes:
      - redis:/data
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes

volumes:
  mysql:
  redis:

#sonarqube:
 ### - "9000:9000"
  #networks:
   # - laravel_app_net
  #environment:
   # - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonar
    #- SONARQUBE_JDBC_USERNAME=sonar
    #- SONARQUBE_JDBC_PASSWORD=sonar
    #- SONARQUBE_WEB_JAVAADDITIONALOPTS="-Dsonar.qualitygate.wait=true"
 # volumes:
  ## - sonarqube_data:/opt/sonarqube/data
    ##- sonarqube_extensions:/opt/sonarqube/extensions
    #- sonarqube_logs:/opt/sonarqube/logs

#jenkins:
 # image: jenkins/jenkins:2.289.3-lts-jdk11
  #ports:
   # - "8080:8080"
  #volumes:
   # - jenkins_home:/var/jenkins_home
